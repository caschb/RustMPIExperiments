#!/bin/sh

#SBATCH --job-name=bs-solctra-rs-{nodes}
#SBATCH --partition=kura-all
#SBATCH --output=stdout-%x_%j
#SBATCH --error=stderr-%x_%j
# #SBATCH --mail-user=casch@cenat.ac.cr
# #SBATCH --mail-type=END,FAIL
#SBATCH --time=1-00:00:00

#SBATCH --nodes={nodes}
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=40
#SBATCH --exclusive


. /opt/Modules/3.2.10/init/sh
module purge
# Load needed modules
source /work/casch/spack/share/spack/setup-env.sh
spack env activate rust
module load mpich/3.3.2-gcc-9.3.0
module load gcc/9.3.0

scontrol show job ${SLURM_JOB_ID}
export LOG_DIR=./thread_runs_logs
export OUTPUT_DIR=${LOG_DIR}/output_${SLURM_JOB_ID}

export RUST_LOG=info
export BASE_DIR=${HOME}/RustMPIExperiments/bs-solctra-mpi-rs
export EXECUTABLE=${BASE_DIR}/target/release/bs-solctra-rs
export PARTICLE_DATA=${HOME}/RustMPIExperiments/experiments/kabre/bs-solctra-mpi-rs/input_big.csv
export COIL_DATA=${BASE_DIR}/tests/test-resources/resources

if [ ! -d ${LOG_DIR} ]; then
  mkdir ${LOG_DIR}
fi

for rep in {0..{reps}}
do
  for threadnum in 1 10 20 40
  do
  export RAYON_NUM_THREADS=${threadnum}
  srun --exclusive -o ${LOG_DIR}/stdout-%x_%j_${rep}_${threadnum}_{nodes} -e ${LOG_DIR}/stderr-%x_%j_${rep}_${threadnum}_{nodes} -N {nodes} --ntasks-per-node 1\
    ${EXECUTABLE}\
    -r ${COIL_DATA}\
    -o ${OUTPUT_DIR}_${rep}_{nodes}\
    -p ${PARTICLE_DATA}\
    --steps 10\
    --num-particles 102400\
    -w 1001 &
  done
done

wait
